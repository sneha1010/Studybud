{
    "sourceFile": "base/views.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1656262227961,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1656264572196,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,8 +51,9 @@\n     form = MyUserCreationForm()\r\n \r\n     if request.method == 'POST':\r\n         form = MyUserCreationForm(request.POST)\r\n+        console.log(form)\r\n         if form.is_valid():\r\n             user = form.save(commit=False)\r\n             user.username = user.username.lower()\r\n             user.save()\r\n"
                },
                {
                    "date": 1656264687008,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,10 +51,11 @@\n     form = MyUserCreationForm()\r\n \r\n     if request.method == 'POST':\r\n         form = MyUserCreationForm(request.POST)\r\n-        console.log(form)\r\n+        # console.log(form)\r\n         if form.is_valid():\r\n+            console.log(form)\r\n             user = form.save(commit=False)\r\n             user.username = user.username.lower()\r\n             user.save()\r\n             login(request, user)\r\n"
                },
                {
                    "date": 1656264762446,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,9 @@\n     if request.method == 'POST':\r\n         form = MyUserCreationForm(request.POST)\r\n         # console.log(form)\r\n         if form.is_valid():\r\n-            console.log(form)\r\n+            # console.log(form)\r\n             user = form.save(commit=False)\r\n             user.username = user.username.lower()\r\n             user.save()\r\n             login(request, user)\r\n"
                }
            ],
            "date": 1656262227961,
            "name": "Commit-0",
            "content": "from django.shortcuts import render, redirect\r\nfrom django.http import HttpResponse\r\nfrom django.contrib import messages\r\nfrom django.contrib.auth.decorators import login_required\r\nfrom django.db.models import Q\r\nfrom django.contrib.auth import authenticate, login, logout\r\nfrom .models import Room, Topic, Message, User\r\nfrom .forms import RoomForm, UserForm, MyUserCreationForm\r\n\r\n# Create your views here.\r\n\r\n# rooms = [\r\n#     {'id': 1, 'name': 'Lets learn python!'},\r\n#     {'id': 2, 'name': 'Design with me'},\r\n#     {'id': 3, 'name': 'Frontend developers'},\r\n# ]\r\n\r\n\r\ndef loginPage(request):\r\n    page = 'login'\r\n    if request.user.is_authenticated:\r\n        return redirect('home')\r\n\r\n    if request.method == 'POST':\r\n        username = request.POST.get('username').lower()\r\n        password = request.POST.get('password')\r\n\r\n        try:\r\n            user = User.objects.get(username=username)\r\n        except:\r\n            messages.error(request, 'User does not exist')\r\n\r\n        user = authenticate(request, username=username, password=password)\r\n\r\n        if user is not None:\r\n            login(request, user)\r\n            return redirect('home')\r\n        else:\r\n            messages.error(request, 'Username OR password does not exit')\r\n\r\n    context = {'page': page}\r\n    return render(request, 'base/login_register.html', context)\r\n\r\n\r\ndef logoutUser(request):\r\n    logout(request)\r\n    return redirect('home')\r\n\r\n\r\ndef registerPage(request):\r\n    form = MyUserCreationForm()\r\n\r\n    if request.method == 'POST':\r\n        form = MyUserCreationForm(request.POST)\r\n        if form.is_valid():\r\n            user = form.save(commit=False)\r\n            user.username = user.username.lower()\r\n            user.save()\r\n            login(request, user)\r\n            return redirect('home')\r\n        else:\r\n            messages.error(request, 'An error occurred during registration')\r\n\r\n    return render(request, 'base/login_register.html', {'form': form})\r\n\r\n\r\ndef home(request):\r\n    q = request.GET.get('q') if request.GET.get('q') != None else ''\r\n\r\n    rooms = Room.objects.filter(\r\n        Q(topic__name__icontains=q) |\r\n        Q(name__icontains=q) |\r\n        Q(description__icontains=q)\r\n    )\r\n\r\n    topics = Topic.objects.all()[0:5]\r\n    room_count = rooms.count()\r\n    room_messages = Message.objects.filter(\r\n        Q(room__topic__name__icontains=q))[0:3]\r\n\r\n    context = {'rooms': rooms, 'topics': topics,\r\n               'room_count': room_count, 'room_messages': room_messages}\r\n    return render(request, 'base/home.html', context)\r\n\r\n\r\ndef room(request, pk):\r\n    room = Room.objects.get(id=pk)\r\n    room_messages = room.message_set.all()\r\n    participants = room.participants.all()\r\n\r\n    if request.method == 'POST':\r\n        message = Message.objects.create(\r\n            user=request.user,\r\n            room=room,\r\n            body=request.POST.get('body')\r\n        )\r\n        room.participants.add(request.user)\r\n        return redirect('room', pk=room.id)\r\n\r\n    context = {'room': room, 'room_messages': room_messages,\r\n               'participants': participants}\r\n    return render(request, 'base/room.html', context)\r\n\r\n\r\ndef userProfile(request, pk):\r\n    user = User.objects.get(id=pk)\r\n    rooms = user.room_set.all()\r\n    room_messages = user.message_set.all()\r\n    topics = Topic.objects.all()\r\n    context = {'user': user, 'rooms': rooms,\r\n               'room_messages': room_messages, 'topics': topics}\r\n    return render(request, 'base/profile.html', context)\r\n\r\n\r\n@login_required(login_url='login')\r\ndef createRoom(request):\r\n    form = RoomForm()\r\n    topics = Topic.objects.all()\r\n    if request.method == 'POST':\r\n        topic_name = request.POST.get('topic')\r\n        topic, created = Topic.objects.get_or_create(name=topic_name)\r\n\r\n        Room.objects.create(\r\n            host=request.user,\r\n            topic=topic,\r\n            name=request.POST.get('name'),\r\n            description=request.POST.get('description'),\r\n        )\r\n        return redirect('home')\r\n\r\n    context = {'form': form, 'topics': topics}\r\n    return render(request, 'base/room_form.html', context)\r\n\r\n\r\n@login_required(login_url='login')\r\ndef updateRoom(request, pk):\r\n    room = Room.objects.get(id=pk)\r\n    form = RoomForm(instance=room)\r\n    topics = Topic.objects.all()\r\n    if request.user != room.host:\r\n        return HttpResponse('Your are not allowed here!!')\r\n\r\n    if request.method == 'POST':\r\n        topic_name = request.POST.get('topic')\r\n        topic, created = Topic.objects.get_or_create(name=topic_name)\r\n        room.name = request.POST.get('name')\r\n        room.topic = topic\r\n        room.description = request.POST.get('description')\r\n        room.save()\r\n        return redirect('home')\r\n\r\n    context = {'form': form, 'topics': topics, 'room': room}\r\n    return render(request, 'base/room_form.html', context)\r\n\r\n\r\n@login_required(login_url='login')\r\ndef deleteRoom(request, pk):\r\n    room = Room.objects.get(id=pk)\r\n\r\n    if request.user != room.host:\r\n        return HttpResponse('Your are not allowed here!!')\r\n\r\n    if request.method == 'POST':\r\n        room.delete()\r\n        return redirect('home')\r\n    return render(request, 'base/delete.html', {'obj': room})\r\n\r\n\r\n@login_required(login_url='login')\r\ndef deleteMessage(request, pk):\r\n    message = Message.objects.get(id=pk)\r\n\r\n    if request.user != message.user:\r\n        return HttpResponse('Your are not allowed here!!')\r\n\r\n    if request.method == 'POST':\r\n        message.delete()\r\n        return redirect('home')\r\n    return render(request, 'base/delete.html', {'obj': message})\r\n\r\n\r\n@login_required(login_url='login')\r\ndef updateUser(request):\r\n    user = request.user\r\n    form = UserForm(instance=user)\r\n\r\n    if request.method == 'POST':\r\n        form = UserForm(request.POST, request.FILES, instance=user)\r\n        if form.is_valid():\r\n            form.save()\r\n            return redirect('user-profile', pk=user.id)\r\n\r\n    return render(request, 'base/update-user.html', {'form': form})\r\n\r\n\r\ndef topicsPage(request):\r\n    q = request.GET.get('q') if request.GET.get('q') != None else ''\r\n    topics = Topic.objects.filter(name__icontains=q)\r\n    return render(request, 'base/topics.html', {'topics': topics})\r\n\r\n\r\ndef activityPage(request):\r\n    room_messages = Message.objects.all()\r\n    return render(request, 'base/activity.html', {'room_messages': room_messages})\r\n"
        }
    ]
}